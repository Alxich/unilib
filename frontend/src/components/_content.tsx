import { FC, useEffect, useState } from "react";
import type { NextPageContext } from "next";
import Head from "next/head";
import classNames from "classnames";
import { Toaster } from "react-hot-toast";

// Importing once next-auth session
import { getSession, useSession } from "next-auth/react";

import { Header, Banner, Sidebar, Reels, WritterPost } from "../components";

interface ContentProps {
  children: any;
}

const Content: FC<ContentProps> = ({ children }: ContentProps) => {
  const [bannerActive, setBannerActive] = useState(false);
  const [writterActive, setWritterActive] = useState(false);

  const { data: session } = useSession();

  useEffect(() => {
    writterActive
      ? document.body.classList.add("writter-active")
      : document.body.classList.remove("writter-active");
  }, [writterActive]);

  return (
    // session ? (
    <>
      <Head>
        <title>UNILIB - Український форум</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header
        setBannerActive={setBannerActive}
        session={session}
        writterActive={writterActive}
        setWritterActive={setWritterActive}
      />
      <main
        className={classNames("main", {
          "writter-active": writterActive,
        })}
      >
        <div className="container main-content flex-row flex-space">
          <Sidebar categories={[]} fandoms={[]} />
          <div id="content" className="container">
            {children}
          </div>
          <Reels />
        </div>
      </main>
      <Banner
        bannerActive={bannerActive}
        setBannerActive={setBannerActive}
        session={session}
      />
      <WritterPost
        session={session}
        writterActive={writterActive}
        setWritterActive={setWritterActive}
      />
      <footer className={"colophon"}></footer>
      <div>
        <Toaster position="bottom-right" />
      </div>
    </>
    // ) : (
    //   <div>Page loading</div>
  );
};

export async function getServerSideProps(ctx: NextPageContext) {
  const session = await getSession(ctx);

  return {
    props: {
      session,
    },
  };
}

export default Content;
